{
    "openapi": "3.0.0",
    "info": {
        "description": "# Introduction\n\nThe purpose of this API specification is to build a NFT API which complements the rippled API. This API is not built to replace the rippled API but rather introduce functions/methods that are not provided by rippled.\n\n# Cross-Origin Resource Sharing\n\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\n\nAnd that allows cross-domain communication from the browser.\n\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n# Rate Limiting\n\nThe default rate limit is 10 requests per minute. All responses include the approriate rate limiting headers according to this specifictaion. See API specification below.\n\nIf you need elevated rate limits, please contact us through the channels listed below.\n\nThe pricing is as follows:\n\n- Tier 0 -> Limit: 10 Requests / Minute -> Free\n\n- Tier 1 -> Limit: 60 Requests / Minute -> 20 XRP / Month\n\n- Tier 2 -> Limit: 600 Requests / Minute -> 40 XRP / Month\n- Tier 3 -> Limit: 1200 Requests / Minute -> 100 XRP / Month\n\n- Tier 4 -> Limit: 2400 Requests / Minute -> 200 XRP / Month\n\n- Tier 5 -> Limit: Custom limits and pricing. Please get in touch!\n\nIf you want to send requests with an API key, please set the key into the `x-api-key` header of your requests like this:\n`x-api-key: abcd-abcd-0000-abcd-0123abcdabcd`\n\n# Testnet API\n\nAn API for the XRPL `Testnet` is available here: [Testnet API](https://test-api.xrpldata.com/docs)",
        "version": "5.5.3",
        "title": "XRP Ledger Services NFT Api",
        "contact": {
            "name": "@XrplServices",
            "email": "info@xrpl.services",
            "url": "https://twitter.com/XrplServices"
        }
    },
    "servers": [
        {
            "url": "/api/v1"
        }
    ],
    "tags": [
        {
            "name": "NFT methods"
        },
        {
            "name": "Offer methods"
        }
    ],
    "x-tagGroups": [
        {
            "name": "General",
            "tags": [
                "NFT methods",
                "Offer methods",
                "Statistic methods"
            ]
        }
    ],
    "paths": {
        "/xls20-nfts/all/issuers": {
            "get": {
                "summary": "Get all current Issuers of NFTs",
                "description": "Returns an array of XRPL accounts which have currently issued NFTs on the XRP Ledger.",
                "tags": [
                    "NFT methods"
                ],
                "responses": {
                    "200": {
                        "description": "- `issuers` = Array of all currently known NFToken Issuers",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-remaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllIssuerResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/issuer/{issuer}": {
            "get": {
                "summary": "Get all NFTs from a specific Issuer",
                "description": "Returns an array of NFTs issued by the given Account",
                "tags": [
                    "NFT methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "issuer",
                        "required": true,
                        "description": "The issuer account you want to get the NFTs for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `nfts` = Array of all NFTs of the given Issuer",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IssuerNftResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/taxon/{issuer}": {
            "get": {
                "summary": "Get all taxons used by a specific Issuer",
                "description": "Returns an array of taxons used by the given XRPL account.",
                "tags": [
                    "NFT methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "issuer",
                        "required": true,
                        "description": "The issuer account you want to get the Taxons from.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `taxons` = Array of all currently known Taxons used by the given Issuer",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxonResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/issuer/{issuer}/taxon/{taxon}": {
            "get": {
                "summary": "Get all NFTs from a specific Issuer and Taxon.",
                "description": "Returns an array of NFTs issued by the given Issuer with a specific Taxon. This is helpful to receive NFTs of a specific Collection.",
                "tags": [
                    "NFT methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "issuer",
                        "required": true,
                        "description": "The issuer account you want to get the NFTs for.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "taxon",
                        "required": true,
                        "description": "The Taxon that the issuer set when minting the NFTs",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `nfts` = Array of all NFTs of the given Issuer with the specified Taxon",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IssuerTaxonNftResponse"
                                }
                            }
                        }
                    }
                }
            }
        },"/xls20-nfts/owner/{owner}": {
            "get": {
                "summary": "Get all NFTs owned by a specific account",
                "description": "Returns an array of NFTs owned by the given Account",
                "tags": [
                    "NFT methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "owner",
                        "required": true,
                        "description": "The owner account you want to get the NFTs for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `nfts` = Array of all NFTs owned by the given XRPL Account",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OwnerNftResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/nft/{nftokenid}": {
            "get": {
                "summary": "Get details for a single NFT.",
                "description": "Returns a single NFT and its details.",
                "tags": [
                    "NFT methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "nftokenid",
                        "required": true,
                        "description": "The NFTokenID of the NFT you want to get the details for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `nft` = single NFT object for the given NFTokenID",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTDetailResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/offers/issuer/{issuer}": {
            "get": {
                "summary": "Get all Offers for NFTs from a specific Issuer",
                "description": "Returns an array of Offers from NFTs issued by the given Account",
                "tags": [
                    "Offer methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "issuer",
                        "required": true,
                        "description": "The issuer account you want to get the Offers for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `offers` = Array of all Offers for NFTs from the given Issuer",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IssuerOfferResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/offers/issuer/{issuer}/taxon/{taxon}": {
            "get": {
                "summary": "Get all Offers for NFTs from a specific Issuer and Taxon.",
                "description": "Returns an array of Offers for NFTs issued by the given Issuer with a specific Taxon. This is helpful to receive Offers of a specific Collection.",
                "tags": [
                    "Offer methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "issuer",
                        "required": true,
                        "description": "The issuer account you want to get the NFTs for.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "taxon",
                        "required": true,
                        "description": "The Taxon that the issuer set when minting the NFTs",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `offers` = Array of all Offers for NFTs from the given Issuer and the specified Taxon",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IssuerTaxonOfferResponse"
                                }
                            }
                        }
                    }
                }
            }
        },"/xls20-nfts/offers/nftowner/{nftowner}": {
            "get": {
                "summary": "Get all Offers for NFTs owned by a specific account",
                "description": "Returns an array of Offers for NFTs owned by the given Account",
                "tags": [
                    "Offer methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "nftowner",
                        "required": true,
                        "description": "The nft owner account you want to get the Offers for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `offers` = Array of all Offers for NFTs owned by the specified XRPL Account",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NftOwnerOfferResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/offers/offerowner/{offerowner}": {
            "get": {
                "summary": "Get all NFT Offers owned by a specific account..",
                "description": "Returns ALL NFT Offers owned by a specific account.",
                "tags": [
                    "Offer methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "offerowner",
                        "required": true,
                        "description": "The Offer Owner Account which you want to get the Offers for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `offers` = Array of all Offers created/owned by the given XRPL Account",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfferOwnerResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/offers/offerdestination/{offerdestination}": {
            "get": {
                "summary": "Get all NFT Offers of a specific account which is set as `Destination`",
                "description": "Returns ALL NFT Offers for a single account which is set as `Destination`.",
                "tags": [
                    "Offer methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "offerdestination",
                        "required": true,
                        "description": "The Offer Destination Account which you want to get the Offers for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `offers` = Array of all Offers where the given XRPL Account is set as `Destination`",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfferDestinationResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/offers/all/account/{xrplaccount}": {
            "get": {
                "summary": "Get all relevant offers for a specific XRP Ledger account.",
                "description": "Returns all relevant NFToken offers for a specific XRP Ledger account.",
                "tags": [
                    "Offer methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "xrplaccount",
                        "required": true,
                        "description": "The XRPL Account which you want to get the relevant Offers for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `offers_owned` = Array of all Offers created/owned by the given XRPL Account\n\n- `offers_for_own_nfts` = Array of all Offers for NFTs owned by the specified XRPL Account\n\n- `offers_as_destination` = Array of all Offers where the given XRPL Account is set as `Destination`",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllAccountOffersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/offer/id/{offerid}": {
            "get": {
                "summary": "Get a specifc Offer by its ID.",
                "description": "Returns the details for a single Offer.",
                "tags": [
                    "Offer methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "offerid",
                        "required": true,
                        "description": "The OfferID of the Offer you receive.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `offer` = single Offer object for the given OfferID",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTOfferIDResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/offers/nft/{nftokenid}": {
            "get": {
                "summary": "Get all Offers for a single NFT.",
                "description": "Returns Offers for a single NFT.",
                "tags": [
                    "Offer methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "nftokenid",
                        "required": true,
                        "description": "The NFTokenID of the NFT you want to get the Offers for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `offers` = an Object containing all buy and sell Offers for the given NFTokenID",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-lemaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTOffersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/stats/issuer/{issuer}": {
            "get": {
                "summary": "Get stats about all NFTs from a specific issuer",
                "description": "*THIS API ENDPOINT EXCLUDES:*\n\n`- EXPIRED BUY OR SELL OFFERS`\n\n`- BUY OR SELL OFFERS WITH AMOUNT = 0`\n\n`- SELL OFFERS WHERE THE OFFER OWNER IS *NOT* THE NFT OWNER`\n\n\n\nReturns an object containing live statistics about the issuer's NFTs",
                "tags": [
                    "Statistic methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "issuer",
                        "required": true,
                        "description": "The Issuer you want to receive NFT stats for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `nfts` = Total number of NFTs by this Issuer\n\n- `unique_owners` = Number of unique XRPL Accounts owning NFTs by the given Issuer\n\n- `nfts_for_sale` = Number of valid sell offer (see exclusions above) for NFTs of the given Issuer \n\n- `sell_offers` = Total Number of sell offers for NFTs of the given Issuer\n\n- `buy_offers` = Total Number of buy offers for NFTs of the given Issuer\n\n- `floor` = shows lowest SELL offers for ALL available currencies across all Marketplaces including XRPL DEX\n\n- `open_market` = Stats about offers on the `Open Market` (no `Destination` set!). Freely available for everyone\n\n- `market_places` = Stats about offers where an MarketPlace is set as `Destination`. (Can only be accepted by the Marketplace!)\n\n",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-remaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionInfoIssuerResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xls20-nfts/stats/issuer/{issuer}/taxon/{taxon}": {
            "get": {
                "summary": "Get stats about specific NFTs from a specific issuer with the given Taxon",
                "description": "*THIS API ENDPOINT EXCLUDES:*\n\n`- EXPIRED BUY OR SELL OFFERS`\n\n`- BUY OR SELL OFFERS WITH AMOUNT = 0`\n\n`- SELL OFFERS WHERE THE OFFER OWNER IS *NOT* THE NFT OWNER`\n\n\n\nReturns an object containing live statistics about the issuer's NFTs with a specific `Taxon` (Collection)",
                "tags": [
                    "Statistic methods"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "issuer",
                        "required": true,
                        "description": "The Issuer you want to receive NFT stats for.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "taxon",
                        "required": true,
                        "description": "The Taxon of the issuer you want to receive NFT stats for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "- `nfts` = Total number of NFTs by this Issuer\n\n- `unique_owners` = Number of unique XRPL Accounts owning NFTs by the given Issuer\n\n- `nfts_for_sale` = Number of valid sell offer (see exclusions above) for NFTs of the given Issuer \n\n- `sell_offers` = Total Number of sell offers for NFTs of the given Issuer\n\n- `buy_offers` = Total Number of buy offers for NFTs of the given Issuer\n\n- `floor` = shows lowest SELL offers for ALL available currencies across all Marketplaces including XRPL DEX\n\n- `open_market` = Stats about offers on the `Open Market` (no `Destination` set!). Freely available for everyone\n\n- `market_places` = Stats about offers where an MarketPlace is set as `Destination`. (Can only be accepted by the Marketplace!)\n\n",
                        "headers": {
                            "x-ratelimit-limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Maximum number of requests per minute."
                            },
                            "x-ratelimit-remaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of remaining requests per minute."
                            },
                            "x-ratelimit-reset": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Number of seconds until the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionInfoIssuerResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {},
        "schemas": {
            "NFT": {
                "type": "object",
                "required": [
                    "NFTokenID",
                    "Issuer",
					"Owner",
					"Taxon",
					"Sequence",
                    "TransferFee"
                ],
                "properties": {
                    "NFTokenID": {
                        "type": "string"
                    },
                    "Issuer": {
                        "type": "string"
                    },
                    "Owner": {
                        "type": "string"
                    },
                    "Taxon": {
                        "type": "number"
                    },
                    "Sequence": {
                        "type": "number"
                    },
                    "TransferFee": {
                        "type": "number"
                    },
                    "Flags": {
                        "type": "number"
                    },
                    "URI": {
                        "type": "string"
                    }
                },
                "title": "NFT"
            },
            "NFTOffer": {
                "type": "object",
                "required": [
                    "Amount",
                    "Flags",
					"NFTokenID",
					"Owner",
					"OfferID"
                ],
                "properties": {
                    "Amount": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "currency": {
                                        "type": "string"
                                    },
                                    "issuer": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ]
                    },
                    "Flags": {
                        "type": "number"
                    },
                    "NFTokenID": {
                        "type": "string"
                    },
                    "Owner": {
                        "type": "string"
                    },
                    "OfferID": {
                        "type": "string"
                    },
                    "Destination": {
                        "type": "string"
                    },
                    "Expiration": {
                        "type": "number"
                    }
                },
                "title": "NFTOffer"
            },
            "NFTOfferData": {
                "type": "object",
                "required": [
                    "NFTokenID",
                    "NFTokenOwner",
                    "buy",
					"sell"
                ],
                "properties": {
                    "NFTokenID": {
                        "type": "string"
                    },
                    "NFTokenOwner": {
                        "type": "string"
                    },
                    "buy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOffer"
                        }
                    },
                    "sell": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOffer"
                        }
                    }
                },
                "title": "NFTOfferData"
            },
            "Info": {
                "type": "object",
                "required": [
                    "ledger_index",
                    "ledger_hash",
                    "ledger_close",
					"ledger_close_ms"
                ],
                "properties": {
                    "ledger_index": {
                        "type": "number"
                    },
                    "ledger_hash": {
                        "type": "string"
                    },
                    "ledger_close": {
                        "type": "string"
                    },
                    "ledger_close_ms": {
                        "type": "number"
                    }
                },
                "title": "Info"
            },
            "FloorPriceProperty": {
                "type": "object",
                "required": [
                    "issuer",
                    "currency",
                    "amount"
                ],
                "properties": {
                    "issuer": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    }
                },
                "title": "FloorPriceProperty"
            },
            "CollectionInfoData": {
                "type": "object",
                "required": [
                    "issuer",
                    "taxon",
                    "nfts",
                    "unique_owners",
					"nfts_for_sale",
                    "sell_offers",
                    "buy_offers",
                    "floor"
                ],
                "properties": {
                    "issuer": {
                        "type": "string"
                    },
                    "taxon": {
                        "type": "string"
                    },
                    "nfts": {
                        "type": "number"
                    },
                    "unique_owners": {
                        "type": "number"
                    },
                    "nfts_for_sale": {
                        "type": "number"
                    },
                    "sell_offers": {
                        "type": "number"
                    },
                    "buy_offers": {
                        "type": "number"
                    },
                    "floor": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FloorPriceProperty"
                        }
                    },
                    "open_market": {
                        "type": "object",
                        "required": [
                            "nfts_for_sale",
                            "sell_offers",
                            "buy_offers",
                            "floor"
                        ],
                        "properties": {
                            "nfts_for_sale": {
                                "type": "number"
                            },
                            "sell_offers": {
                                "type": "number"
                            },
                            "buy_offers": {
                                "type": "number"
                            },
                            "floor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FloorPriceProperty"
                                }
                            }
                        }
                    },
                    "market_places": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MpData"
                        }
                    }
                },
                "title": "CollectionInfoData"
            },
            "MpData": {
                "type": "object",
                "required": [
                    "mp_account",
                    "nfts_for_sale",
                    "sell_offers",
                    "buy_offers",
                    "floor"
                ],
                "properties": {
                    "mp_account": {
                        "type": "string"
                    },
                    "nfts_for_sale": {
                        "type": "number"
                    },
                    "sell_offers": {
                        "type": "number"
                    },
                    "buy_offers": {
                        "type": "number"
                    },
                    "floor": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FloorPriceProperty"
                        }
                    }
                },
                "title": "MpData"
            },
            "AllIssuerResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/AllIssuerData"
                    }
                },
                "title": "ValidationError"
            },
            "AllIssuerData": {
                "type": "object",
                "required":["issuers"],
                "properties": {
                    "issuers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "TaxonResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/TaxonData"
                    }
                },
                "title": "ValidationError"
            },
            "TaxonData": {
                "type": "object",
                "required":["issuer","taxons"],
                "properties": {
                    "issuer": {
                        "type": "string"
                    },
                    "taxons": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                }
            },
            "IssuerNftResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/IssuerNftData"
                    }
                },
                "title": "ValidationError"
            },
            "IssuerNftData": {
                "type": "object",
                "required":["issuer","nfts"],
                "properties": {
                    "issuer": {
                        "type": "string"
                    },
                    "nfts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFT"
                        }
                    }
                }
            },
            "IssuerTaxonNftResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/IssuerTaxonNftData"
                    }
                },
                "title": "ValidationError"
            },
            "IssuerTaxonNftData": {
                "type": "object",
                "required":["issuer","taxon","nfts"],
                "properties": {
                    "issuer": {
                        "type": "string"
                    },
                    "taxon": {
                        "type": "number"
                    },
                    "nfts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFT"
                        }
                    }
                }
            },
            "OwnerNftResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/OwnerNftData"
                    }
                },
                "title": "ValidationError"
            },
            "OwnerNftData": {
                "type": "object",
                "required":["owner","nfts"],
                "properties": {
                    "owner": {
                        "type": "string"
                    },
                    "nfts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFT"
                        }
                    }
                }
            },
            "NFTDetailResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/NFTDetailData"
                    }
                },
                "title": "ValidationError"
            },
            "NFTDetailData": {
                "type": "object",
                "required":["nft"],
                "properties": {
                    "nft": {
                        "$ref": "#/components/schemas/NFT"
                    }
                }
            },
            "IssuerOfferResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/IssuerOfferData"
                    }
                },
                "title": "ValidationError"
            },
            "IssuerOfferData": {
                "type": "object",
                "required":["issuer","offers"],
                "properties": {
                    "issuer": {
                        "type": "string"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOfferData"
                        }
                    }
                }
            },
            "IssuerTaxonOfferResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/IssuerTaxonOfferData"
                    }
                },
                "title": "ValidationError"
            },
            "IssuerTaxonOfferData": {
                "type": "object",
                "required":["issuer","taxon","offers"],
                "properties": {
                    "issuer": {
                        "type": "string"
                    },
                    "taxon": {
                        "type": "number"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOfferData"
                        }
                    }
                }
            },
            "NftOwnerOfferResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/NftOwnerOfferData"
                    }
                },
                "title": "ValidationError"
            },
            "NftOwnerOfferData": {
                "type": "object",
                "required":["nftowner","offers"],
                "properties": {
                    "nftowner": {
                        "type": "string"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOfferData"
                        }
                    }
                }
            },
            "NFTOffersResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/NFTOffersData"
                    }
                },
                "title": "ValidationError"
            },
            "NFTOffersData": {
                "type": "object",
                "required":["nftokenid","offers"],
                "properties": {
                    "nftokenid": {
                        "type": "string"
                    },
                    "offers": {
                        "$ref": "#/components/schemas/NFTOfferData"
                    }
                }
            },
            "NFTOfferIDResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/NFTOfferIDData"
                    }
                },
                "title": "ValidationError"
            },
            "NFTOfferIDData": {
                "type": "object",
                "required":["offerid","offer"],
                "properties": {
                    "offerid": {
                        "type": "string"
                    },
                    "offer": {
                        "$ref": "#/components/schemas/NFTOffer"
                    }
                }
            },
            "OfferOwnerResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/OfferOwnerData"
                    }
                },
                "title": "ValidationError"
            },
            "OfferOwnerData": {
                "type": "object",
                "required":["offerowner","offers"],
                "properties": {
                    "offerowner": {
                        "type": "string"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOffer"
                        }
                    }
                }
            },
            "OfferDestinationResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/OfferDestinationData"
                    }
                },
                "title": "ValidationError"
            },
            "OfferDestinationData": {
                "type": "object",
                "required":["offerdestination","offers"],
                "properties": {
                    "offerdestination": {
                        "type": "string"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOffer"
                        }
                    }
                }
            },
            "AllAccountOffersResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/AllAccountOffersData"
                    }
                },
                "title": "ValidationError"
            },
            "AllAccountOffersData": {
                "type": "object",
                "required":["xrplaccount","offers_owned", "offers_for_own_nfts"],
                "properties": {
                    "xrplaccount": {
                        "type": "string"
                    },
                    "offers_owned": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOffer"
                        }
                    },
                    "offers_for_own_nfts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOfferData"
                        }
                    },
                    "offers_as_destination": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOffer"
                        }
                    }
                }
            },
            "CollectionInfoIssuerResponse": {
                "type": "object",
                "required": [
                    "info",
					"data"
                ],
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/Info"
                    },
                    "data": {
                        "$ref": "#/components/schemas/CollectionInfoData"
                    }
                },
                "title": "ValidationError"
            },
            "CollectionInfoIssuerData": {
                "type": "object",
                "required":["issuer","collection_info"],
                "properties": {
                    "issuer": {
                        "type": "string"
                    },
                    "collection_info": {
                        "$ref": "#/components/schemas/CollectionInfoData"
                    }
                }
            }
        },
        "responses": {},
        "requestBodies": {},
        "examples": {}
    }
}